package main

import "fmt"
import "net/http"
import "strconv"

templ index(tablecomponent templ.Component, r *http.Request) {
	<!DOCTYPE html>
	<html>
	<head>
		<title>Electron Binding Energies</title>
		<script src="https://unpkg.com/htmx.org@2.0.4" integrity="sha384-HGfztofotfshcF7+8n44JQL2oJmowVChPTg48S+jvZoztPfvwD79OC/LTtG6dMp+" crossorigin="anonymous"></script>
		<script>
			!function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host.replace(".i.posthog.com","-assets.i.posthog.com")+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="init capture register register_once register_for_session unregister unregister_for_session getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey getNextSurveyStep identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty createPersonProfile opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing debug getPageViewId".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
			posthog.init('phc_EXDkFpJ6Yl8VLRjZa2gr1KKYsf7tQpsmkTBWzCn9Xq3', {
				api_host: 'https://us.i.posthog.com',
				persistence: 'memory',
				person_profiles: 'always', // or 'always' to create profiles for anonymous users as well
			})
		</script>
		<style>
			:root {
				--primary-color: #2563eb;
				--primary-dark: #1d4ed8;
				--secondary-color: #3b82f6;
				--background-color: #f8fafc;
				--border-color: #e2e8f0;
				--text-color: #1e293b;
				--accent-color: #f59e0b;
			}

			@keyframes fadeIn {
				from { opacity: 0; transform: translateY(10px); }
				to { opacity: 1; transform: translateY(0); }
			}

			@keyframes gradient {
				0% { background-position: 0% 50%; }
				50% { background-position: 100% 50%; }
				100% { background-position: 0% 50%; }
			}

			body {
				font-family: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
				line-height: 1.6;
				color: var(--text-color);
				background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
				margin: 0;
				padding: 2rem;
				max-width: 1200px;
				margin: 0 auto;
				min-height: 100vh;
			}

			.hero {
				text-align: center;
				margin-bottom: 3rem;
				animation: fadeIn 0.8s ease-out;
			}

			h1 {
				color: var(--text-color);
				margin-bottom: 1rem;
				font-size: 2.5rem;
				font-weight: 800;
				line-height: 1.2;
			}

			h1 strong {
				background: linear-gradient(120deg, var(--primary-color), var(--accent-color));
				background-size: 200% auto;
				-webkit-background-clip: text;
				background-clip: text;
				color: transparent;
				animation: gradient 3s ease infinite;
			}

			.tagline {
				font-size: 1.2rem;
				color: #64748b;
				margin-bottom: 2rem;
			}

			p {
				margin-bottom: 1rem;
				color: #64748b;
			}

			a {
				color: var(--primary-color);
				text-decoration: none;
				transition: color 0.2s;
			}

			a:hover {
				color: var(--primary-dark);
				text-decoration: underline;
			}

			form {
				background: white;
				padding: 2rem;
				border-radius: 16px;
				box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
				margin-bottom: 2rem;
				max-width: 600px;
				margin-left: auto;
				margin-right: auto;
				border: 1px solid var(--border-color);
				transition: transform 0.2s, box-shadow 0.2s;
			}

			form:hover {
				transform: translateY(-2px);
				box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
			}

			input[type="text"] {
				width: 100%;
				padding: 1rem;
				margin: 0.5rem 0;
				border: 2px solid var(--border-color);
				border-radius: 8px;
				font-size: 1.1rem;
				box-sizing: border-box;
				background-color: white;
				box-shadow: 0 1px 3px rgba(0,0,0,0.1);
				transition: all 0.2s;
			}

			input[type="text"]:focus {
				outline: none;
				border-color: var(--primary-color);
				box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.2);
				background-color: #fff;
			}

			input[type="text"]::placeholder {
				color: #94a3b8;
			}

			.table-container {
				max-height: 70vh;
				overflow-y: auto;
				margin-top: 2rem;
				background: white;
				border-radius: 16px;
				box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
				animation: fadeIn 0.5s ease-out;
			}

			table {
				border-collapse: collapse;
				width: 100%;
				background: white;
				margin: 0;
			}

			thead {
				position: sticky;
				top: 0;
				background: var(--primary-color);
				z-index: 1;
			}

			th {
				background-color: var(--primary-color);
				color: white;
				font-weight: 600;
				padding: 1rem;
				text-align: left;
				position: sticky;
				top: 0;
			}

			td {
				padding: 1rem;
				border-bottom: 1px solid var(--border-color);
				transition: background-color 0.2s;
			}

			tr:hover td {
				background-color: #f8fafc;
			}

			tr:last-child td {
				border-bottom: none;
			}

			#secondaryInput {
				margin-top: 1rem;
				animation: fadeIn 0.3s ease-out;
			}

			/* Custom scrollbar */
			.table-container::-webkit-scrollbar {
				width: 8px;
			}

			.table-container::-webkit-scrollbar-track {
				background: #f1f5f9;
				border-radius: 4px;
			}

			.table-container::-webkit-scrollbar-thumb {
				background: #cbd5e1;
				border-radius: 4px;
			}

			.table-container::-webkit-scrollbar-thumb:hover {
				background: #94a3b8;
			}

			.footer {
				margin-top: 4rem;
				padding: 2rem 0;
				text-align: center;
				color: #64748b;
				font-size: 0.9rem;
				border-top: 1px solid var(--border-color);
				animation: fadeIn 0.8s ease-out;
			}

			.footer a {
				color: var(--primary-color);
				text-decoration: none;
				display: inline-flex;
				align-items: center;
				gap: 0.5rem;
				transition: all 0.2s;
			}

			.footer a:hover {
				color: var(--primary-dark);
				transform: translateY(-1px);
			}

		</style>
	</head>
	<body>
		<div class="hero">
			<h1>Search for core levels - <strong>blazingly fast</strong></h1>
			<p class="tagline">The data is sourced from the <a href="https://xdb.lbl.gov/Section1/Sec_1-1.html">X-Ray Data Booklet</a> by LBL.</p>
		</div>
	

	<form
		hx-boost="true"
		action="/"
		method="get"
		hx-push-url="true"
		hx-target="#data"
		hx-swap="innerHTML scroll:false"
		hx-trigger="keyup changed delay:100ms"
		>
		<p>Element symbol (He, Sn, Cu, ...) or binding energy in eV (13.6, 100, 42, ...).</p><input
			type="text"
			id="mainInput"
			name="search"
			oninput="checkIfNumber()"
			placeholder="Search..."
			value={r.URL.Query().Get("search")}
			autofocus
		/>
		<script>
			function checkIfNumber() {
				var firstInput = document.getElementById('mainInput').value;
				var secondInput = document.getElementById('secondaryInput');

				// Check if the first input is a number
				if (!isNaN(firstInput) && firstInput.trim() !== '') {
				secondInput.style.display = 'block';  // Show second input

				} else {
				secondInput.style.display = 'none';   // Hide second input
				}
			}
		</script>
		<!-- Second input, initially hidden -->
		{{
			var style string
			if _, err := strconv.ParseFloat(r.URL.Query().Get("search"), 64); err == nil {
				style = "display: block;"
			} else {
				style = "display: none;"
			}
		}}
		<div id="secondaryInput" style={style}>
			<p> Width of the search in eV (1, 5, 10, ...).</p>
			<input name="width" type="text" placeholder="1" value={r.URL.Query().Get("width")}/>
		</div>
	</form>

		<h1>Electron Binding Energies</h1>
		<div class="table-container">
			<table>
				<thead>
					<tr>
						<th>Element</th>
						<th>Atomic Number</th>
						<th>Orbital</th>
						<th>Energy</th>
					</tr>
				</thead>
				<tbody id="data">
					@tablecomponent
				</tbody>
			</table>
		</div>
		<footer class="footer">
			Created by <a href="https://github.com/mstaab16" target="_blank" rel="noopener noreferrer">Matthew Staab</a>
		</footer>
	</body>
	</html>
}

templ dataTable(data []DataRow) {
	
	for _, row := range data {
		<tr>
			<td>{row.Element}</td>
			<td>{fmt.Sprintf("%d", row.Number)}</td>
			<td>{row.Orbital}</td>
			<td>{fmt.Sprintf("%.2f", row.Energy)}</td>
		</tr>
	}
}

